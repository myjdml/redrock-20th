{"version":3,"sources":["webpack:///./node_modules/core-js/internals/object-get-own-property-names-external.js","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./src/views/Loading.vue?cbfb","webpack:///./node_modules/core-js/modules/es.array.for-each.js","webpack:///./src/views/Loading.vue","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///./src/views/Loading.vue?5976","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./node_modules/core-js/internals/array-species-create.js","webpack:///./node_modules/core-js/internals/define-well-known-symbol.js","webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./node_modules/core-js/modules/es.symbol.js","webpack:///./node_modules/core-js/internals/array-method-is-strict.js","webpack:///./node_modules/core-js/internals/array-method-uses-to-length.js","webpack:///./node_modules/core-js/modules/es.object.keys.js","webpack:///./node_modules/core-js/internals/array-iteration.js","webpack:///./node_modules/matter-js/build/matter.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptors.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptor.js","webpack:///./node_modules/core-js/internals/well-known-symbol-wrapped.js","webpack:///./node_modules/core-js/internals/is-array.js","webpack:///./node_modules/core-js/internals/dom-iterables.js"],"names":["toIndexedObject","nativeGetOwnPropertyNames","f","toString","windowNames","window","Object","getOwnPropertyNames","getWindowNames","it","error","slice","module","exports","call","global","DOMIterables","forEach","createNonEnumerableProperty","COLLECTION_NAME","Collection","CollectionPrototype","prototype","$forEach","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","callbackfn","this","arguments","length","undefined","fails","wellKnownSymbol","V8_VERSION","SPECIES","METHOD_NAME","array","constructor","foo","Boolean","$","target","proto","forced","id","class","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","source","getOwnPropertyDescriptors","defineProperties","name","props","setup","data","msg","arr","index","Engine","Render","World","Composites","Bodies","engine","create","world","width","height","render","element","document","querySelector","options","wireframes","background","run","add","rectangle","isStatic","fillStyle","strokeStyle","stack","friction","restitution","frictionAir","__scopeId","$filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","isObject","isArray","originalArray","C","Array","path","has","wrappedWellKnownSymbolModule","NAME","Symbol","toPrimitive","definePropertyModule","createPropertyDescriptor","propertyKey","getBuiltIn","IS_PURE","DESCRIPTORS","NATIVE_SYMBOL","USE_SYMBOL_AS_UID","anObject","toObject","nativeObjectCreate","objectKeys","getOwnPropertyNamesModule","getOwnPropertyNamesExternal","getOwnPropertySymbolsModule","getOwnPropertyDescriptorModule","propertyIsEnumerableModule","redefine","shared","sharedKey","hiddenKeys","uid","defineWellKnownSymbol","setToStringTag","InternalStateModule","HIDDEN","SYMBOL","PROTOTYPE","TO_PRIMITIVE","setInternalState","set","getInternalState","getterFor","ObjectPrototype","$Symbol","$stringify","nativeGetOwnPropertyDescriptor","nativeDefineProperty","nativePropertyIsEnumerable","AllSymbols","ObjectPrototypeSymbols","StringToSymbolRegistry","SymbolToStringRegistry","WellKnownSymbolsStore","QObject","USE_SETTER","findChild","setSymbolDescriptor","get","a","O","P","Attributes","ObjectPrototypeDescriptor","wrap","tag","description","symbol","type","isSymbol","$defineProperty","$defineProperties","Properties","properties","concat","$getOwnPropertySymbols","$propertyIsEnumerable","$create","V","$getOwnPropertyDescriptor","descriptor","$getOwnPropertyNames","names","result","IS_OBJECT_PROTOTYPE","TypeError","String","setter","unsafe","sham","stat","string","keyFor","useSetter","useSimple","FORCED_JSON_STRINGIFY","stringify","replacer","space","$replacer","args","valueOf","argument","method","cache","thrower","ACCESSORS","argument0","argument1","nativeKeys","FAILS_ON_PRIMITIVES","bind","IndexedObject","toLength","arraySpeciesCreate","createMethod","TYPE","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","that","specificCreate","self","boundFunction","map","some","every","find","findIndex","r","e","n","t","o","c","require","u","Error","code","p","1","_dereq_","Body","Vertices","Vector","Sleeping","Common","Bounds","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","defaults","nextId","label","parts","plugin","angle","vertices","fromPath","position","x","y","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","velocity","angularVelocity","isSensor","isSleeping","motion","sleepThreshold","density","frictionStatic","collisionFilter","category","mask","group","slop","timeScale","visible","opacity","sprite","xScale","yScale","xOffset","yOffset","lineWidth","body","extend","_initProperties","nextGroup","isNonColliding","nextCategory","bounds","positionPrev","clone","anglePrev","parent","rotate","axes","update","area","mass","inertia","defaultFillStyle","choose","defaultStrokeStyle","min","max","settings","property","hasOwnProperty","setStatic","setMass","setDensity","setInertia","setVertices","setPosition","setAngle","setVelocity","setAngularVelocity","setParts","part","_original","inverseMass","inverseInertia","Infinity","moment","fromVertices","centre","translate","autoHull","clockwiseSort","hull","hullCentre","total","_totalProperties","delta","sub","rotateAbout","magnitude","Math","abs","translation","rotation","point","cos","sin","dx","dy","scale","scaleX","scaleY","totalArea","totalInertia","circleRadius","deltaTime","correction","deltaTimeSquared","pow","velocityPrevX","velocityPrevY","applyForce","offset","mult","div","2","Composite","Events","isModified","bodies","constraints","composites","setModified","composite","updateParents","updateChildren","childComposite","objects","trigger","warn","addBody","addConstraint","addComposite","constraint","remove","deep","removeBody","removeConstraint","removeComposite","compositeA","compositeB","indexOf","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","allBodies","allConstraints","allComposites","move","rebase","recursive","3","gravity","4","Contact","vertex","normalImpulse","tangentImpulse","5","Detector","SAT","Pair","collisions","broadphasePairs","pairsTable","pairs","table","bodyA","bodyB","canCollide","overlaps","j","partA","k","partB","previousCollision","pairId","pair","isActive","collision","collides","collided","filterA","filterB","6","Grid","controller","detector","buckets","pairsList","bucketWidth","bucketHeight","grid","forceUpdate","col","row","bucket","bucketId","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","floor","column","pairKeys","7","timestamp","parentA","parentB","contacts","activeContacts","separation","timeCreated","timeUpdated","supports","support","contactId","contact","depth","setActive","8","Pairs","_pairMaxIdleLife","list","collisionStart","collisionActive","collisionEnd","activePairIds","removeOld","pairIndex","indexesToRemove","9","Query","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","outside","contains","10","Resolver","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","normal","bodyBtoA","contactShare","tempA","_temp","tempB","tempC","tempD","penetration","dot","postSolvePosition","preSolveVelocity","tangent","contactVertex","impulse","cross","solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","perp","velocityPointB","relativeVelocity","normalVelocity","tangentVelocity","tangentSpeed","tangentVelocityDirection","sign","normalForce","clamp","maxFriction","oAcN","oBcN","share","contactNormalImpulse","contactTangentImpulse","11","overlapAB","overlapBA","minOverlap","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","reused","overlap","axis","verticesB","_findSupports","verticesA","neg","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","projection","distance","vertexA","vertexB","nearestDistance","vertexToBody","bodyAPosition","prevIndex","nextIndex","12","Constraint","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","difference","massTotal","inertiaTotal","resistanceTotal","zero","postSolveAll","13","MouseConstraint","Mouse","mouse","canvas","mouseConstraint","on","_triggerEvents","button","mouseEvents","sourceEvents","mousemove","mousedown","mouseup","clearSourceEvents","14","_nextId","_seed","_nowStartTime","Date","argsStart","deepClone","prop","values","begin","end","split","val","shuffle","random","temp","choices","isElement","HTMLElement","nodeType","nodeName","isFunction","isPlainObject","isString","now","performance","webkitNow","_seededRandom","colorToNumber","colorString","replace","charAt","parseInt","logLevel","log","console","info","haystack","needle","func","mapped","topologicalSort","graph","visited","node","_topologicalSort","neighbors","neighbor","chain","funcs","_chained","lastResult","l","chainPathBefore","base","chainPathAfter","_requireGlobal","globalName","moduleName","15","positionIterations","velocityIterations","constraintIterations","enableSleeping","events","timing","broadphase","renderDefaults","metrics","extended","event","_bodiesApplyGravity","_bodiesUpdate","afterCollisions","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","16","eventNames","callback","off","join","callbacks","newCallbacks","eventClone","17","Matter","Plugin","version","uses","used","use","before","after","18","19","absolute","mousedownPosition","mouseupPosition","wheelDelta","pixelRatio","getAttribute","mousewheel","_getRelativeMousePosition","touches","changedTouches","preventDefault","detail","setElement","addEventListener","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","documentElement","parentNode","scrollX","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","pageX","left","pageY","top","clientWidth","clientHeight","20","_registry","register","isPlugin","registered","pluginVersion","versionParse","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","isFor","parsed","for","versionSatisfies","plugins","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","pattern","test","identifiers","isRange","isNaN","substr","operator","prerelease","rangeParsed","rangeParts","versionParsed","versionParts","21","Runner","_requestAnimationFrame","_cancelAnimationFrame","_frameTimeout","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","setTimeout","clearTimeout","fps","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","frameRequestId","isFixed","enabled","runner","deltaMin","deltaMax","time","tick","stop","start","22","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","sleepingBody","movingBody","wasSleeping","23","decomp","chamfer","radius","quality","qualityMin","qualityMax","trapezoid","slope","verticesPath","roof","x1","x2","x3","circle","maxSides","sides","ceil","polygon","theta","PI","xx","yy","toFixed","vertexSets","flagInternal","removeCollinear","minimumArea","isConvex","v","z","concave","makeCCW","removeCollinearPoints","decomposed","quickDecomp","chunk","chunkVertices","coincident_max_dist","pav","pbv","da","magnitudeSquared","db","isInternal","24","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","bodyBWidth","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","size","car","wheelSize","wheelBase","wheelAOffset","wheelBOffset","wheelYOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","25","normalise","gradient","26","boundsA","boundsB","vector","shift","deltaX","deltaY","27","Svg","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","segmentIndex","lx","ly","points","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","28","sqrt","output","vectorA","vectorB","cross3","vectorC","scalar","negate","atan2","29","pathPattern","match","parseFloat","mean","average","signed","numerator","denominator","vertice","nextVertice","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","radiusVector","midNormal","scaledVertex","precision","alpha","acos","sort","flag","upper","lower","pop","30","RenderPixi","31","wireframeBackground","hasBounds","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","setPixelRatio","appendChild","loop","_getPixelRatio","setAttribute","style","lookAt","padding","center","viewHeight","viewWidth","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","endViewTransform","setTransform","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","debug","debugTimestamp","text","round","debugString","font","fillText","beginPath","arc","closePath","moveTo","coils","lineTo","stroke","fill","bodyShadows","distanceX","distanceY","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","globalAlpha","texture","_getTexture","drawImage","rect","normalPosX","normalPosY","bucketKeys","inspector","selected","item","setLineDash","selectStart","selectBounds","createElement","oncontextmenu","onselectstart","devicePixelRatio","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","imagePath","image","Image","src","cssBackground","backgroundSize","32","renderer","container","spriteContainer","pixiOptions","transparent","view","antialias","backgroundColor","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","children","removeChild","bgSprite","addChildAt","setBackground","isColor","color","Sprite","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","initialAngle","texturePath","anchor","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage","createProperty","FORCED","classof","arg","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList"],"mappings":"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","file":"js/chunk-46f3e7a6.70843903.js","sourcesContent":["var toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return nativeGetOwnPropertyNames(it);\n  } catch (error) {\n    return windowNames.slice();\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]'\n    ? getWindowNames(it)\n    : nativeGetOwnPropertyNames(toIndexedObject(it));\n};\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\nmodule.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n} : [].forEach;\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Loading.vue?vue&type=style&index=0&id=a8821280&lang=less&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Loading.vue?vue&type=style&index=0&id=a8821280&lang=less&scoped=true\"","'use strict';\nvar $ = require('../internals/export');\nvar forEach = require('../internals/array-for-each');\n\n// `Array.prototype.forEach` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {\n  forEach: forEach\n});\n","<template>\n  <div id=\"loading\">\n    <div class=\"main\">\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport { reactive, toRefs } from '@vue/reactivity'\nimport { onMounted } from '@vue/runtime-core'\nimport Matter from 'matter-js'\n\nexport default {\n  name: 'Loading',\n  props: {\n  },\n  setup (props) {\n    const data = reactive({\n      msg: 'alalal',\n      arr: [\n        {\n          value: 'zhangsdan',\n          index: 1\n        },\n        {\n          value: 'lisi',\n          index: 2\n        },\n        {\n          value: 'wangwu',\n          index: 3\n        }\n      ]\n    })\n    onMounted(() => {\n      const Engine = Matter.Engine\n      const Render = Matter.Render\n      const World = Matter.World\n      const Composites = Matter.Composites\n      const Bodies = Matter.Bodies\n\n      const engine = Engine.create()\n      const world = engine.world\n      // 初始化引擎\n      const width = 4000\n      const height = 4000\n      // console.log(height, width);\n      const render = Render.create({\n        element: document.querySelector('.main'),\n        engine: engine,\n        options: {\n          height: height,\n          width: width,\n          wireframes: true,\n          background: 'rgba(255, 255, 255, 0)'\n        }\n      })\n      // this.controlX = engine.world.gravity;\n\n      Engine.run(engine)\n      Render.run(render)\n      // 挂载引擎\n      // 生成墙壁\n      World.add(engine.world, [\n        Bodies.rectangle(0, 0, 1600, 1, {\n          isStatic: true,\n          render: {\n            fillStyle: 'rgba(255, 255, 255, 0)',\n            strokeStyle: 'rgba(255, 255, 255, 0)'\n          }\n        }),\n        Bodies.rectangle(0, 0, 1, 1600, {\n          isStatic: true,\n          render: {\n            fillStyle: 'rgba(255, 255, 255, 0)',\n            strokeStyle: 'rgba(255, 255, 255, 0)'\n          }\n        }),\n        Bodies.rectangle(0, 800, 1600, 1, {\n          isStatic: true,\n          render: {\n            fillStyle: 'rgba(255, 255, 255, 0)',\n            strokeStyle: 'rgba(255, 255, 255, 0)'\n          }\n        }),\n        Bodies.rectangle(800, 0, 1, 1600, {\n          isStatic: true,\n          render: {\n            fillStyle: 'rgba(255, 255, 255, 0)',\n            strokeStyle: 'rgba(255, 255, 255, 0)'\n          }\n        })\n      ])\n      // 生成正方体\n      const stack = Composites.stack(0, 0, 1, 1, 0, 0, function () {\n        return Bodies.rectangle(\n          0,\n          0,\n          400,\n          400,\n          {\n            friction: 0.1,\n            restitution: 0.2,\n            frictionAir: 0.15\n            // render: {\n            //   sprite: {\n            //     texture: that.img.src,\n            //   },\n            // },\n          }\n        )\n      })\n      World.add(world, [stack])\n    })\n    return {\n      ...toRefs(data)\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n  #loading {\n  }\n  .main {\n    width: 500px;\n    height: 300px;\n    border: black solid 1px;\n  }\n</style>\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { render } from \"./Loading.vue?vue&type=template&id=a8821280&scoped=true&bindings={}\"\nimport script from \"./Loading.vue?vue&type=script&lang=js\"\nexport * from \"./Loading.vue?vue&type=script&lang=js\"\n\nimport \"./Loading.vue?vue&type=style&index=0&id=a8821280&lang=less&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-a8821280\"\n\nexport default script","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","var path = require('../internals/path');\nvar has = require('../internals/has');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\nvar WellKnownSymbolsStore = shared('wks');\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar isSymbol = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return Object(it) instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPrimitive(P, true);\n  anObject(Attributes);\n  if (has(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPrimitive(V, true);\n  var enumerable = nativePropertyIsEnumerable.call(this, P);\n  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPrimitive(P, true);\n  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n      result.push(AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.github.io/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  redefine($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Symbol.for` method\n  // https://tc39.github.io/ecma262/#sec-symbol.for\n  'for': function (key) {\n    var string = String(key);\n    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = $Symbol(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  },\n  // `Symbol.keyFor` method\n  // https://tc39.github.io/ecma262/#sec-symbol.keyfor\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  },\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.github.io/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // `Object.getOwnPropertySymbols` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return getOwnPropertySymbolsModule.f(toObject(it));\n  }\n});\n\n// `JSON.stringify` method behavior with symbols\n// https://tc39.github.io/ecma262/#sec-json.stringify\nif ($stringify) {\n  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {\n    var symbol = $Symbol();\n    // MS Edge converts symbol values to JSON as {}\n    return $stringify([symbol]) != '[null]'\n      // WebKit converts symbol values to JSON as null\n      || $stringify({ a: symbol }) != '{}'\n      // V8 throws on boxed symbols\n      || $stringify(Object(symbol)) != '{}';\n  });\n\n  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {\n    // eslint-disable-next-line no-unused-vars\n    stringify: function stringify(it, replacer, space) {\n      var args = [it];\n      var index = 1;\n      var $replacer;\n      while (arguments.length > index) args.push(arguments[index++]);\n      $replacer = replacer;\n      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n      if (!isArray(replacer)) replacer = function (key, value) {\n        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n        if (!isSymbol(value)) return value;\n      };\n      args[1] = replacer;\n      return $stringify.apply(null, args);\n    }\n  });\n}\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive\nif (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n}\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\n\nvar defineProperty = Object.defineProperty;\nvar cache = {};\n\nvar thrower = function (it) { throw it; };\n\nmodule.exports = function (METHOD_NAME, options) {\n  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];\n  if (!options) options = {};\n  var method = [][METHOD_NAME];\n  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;\n  var argument0 = has(options, 0) ? options[0] : thrower;\n  var argument1 = has(options, 1) ? options[1] : undefined;\n\n  return cache[METHOD_NAME] = !!method && !fails(function () {\n    if (ACCESSORS && !DESCRIPTORS) return true;\n    var O = { length: -1 };\n\n    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });\n    else O[1] = 1;\n\n    method.call(O, argument0, argument1);\n  });\n};\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","var bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else if (IS_EVERY) return false;  // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6)\n};\n","/**\n* matter-js 0.14.2 by @liabru 2018-06-11\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Used to require external libraries outside of the bundle.\n     * It first looks for the `globalName` on the environment's global namespace.\n     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n     * @private\n     * @method _requireGlobal\n     * @param {string} globalName The global module name\n     * @param {string} moduleName The fallback CommonJS module name\n     * @return {} The loaded module\n     */\n    Common._requireGlobal = function(globalName, moduleName) {\n        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\n        return obj || _dereq_(moduleName);\n    };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.14.2';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp;\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        if (!decomp) {\n            decomp = Common._requireGlobal('decomp', 'poly-decomp');\n        }\n\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../core/Common\":14,\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar ownKeys = require('../internals/own-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar createProperty = require('../internals/create-property');\n\n// `Object.getOwnPropertyDescriptors` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIndexedObject(object);\n    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var index = 0;\n    var key, descriptor;\n    while (keys.length > index) {\n      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);\n      if (descriptor !== undefined) createProperty(result, key, descriptor);\n    }\n    return result;\n  }\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });\nvar FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\n$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);\n  }\n});\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n"],"sourceRoot":""}