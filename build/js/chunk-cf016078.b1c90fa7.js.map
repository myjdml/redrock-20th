{"version":3,"sources":["webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./node_modules/core-js/modules/es.string.iterator.js","webpack:///./node_modules/core-js/modules/es.string.match.js","webpack:///./node_modules/core-js/internals/string-multibyte.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/core-js/internals/advance-string-index.js","webpack:///./node_modules/core-js/internals/regexp-exec.js","webpack:///./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack:///./src/utils/orienter.js","webpack:///./node_modules/core-js/modules/es.regexp.exec.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./node_modules/matter-js/build/matter.js","webpack:///./node_modules/core-js/modules/es.array.index-of.js","webpack:///./node_modules/core-js/modules/es.symbol.iterator.js","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:///./node_modules/core-js/modules/web.dom-collections.iterator.js","webpack:///./node_modules/core-js/modules/es.symbol.description.js"],"names":["classof","regexpExec","module","exports","R","S","exec","result","call","TypeError","charAt","InternalStateModule","defineIterator","STRING_ITERATOR","setInternalState","set","getInternalState","getterFor","String","iterated","this","type","string","index","point","state","length","value","undefined","done","fixRegExpWellKnownSymbolLogic","anObject","toLength","requireObjectCoercible","advanceStringIndex","regExpExec","MATCH","nativeMatch","maybeCallNative","regexp","O","matcher","RegExp","res","rx","global","fullUnicode","unicode","lastIndex","A","n","matchStr","toInteger","createMethod","CONVERT_TO_STRING","$this","pos","first","second","position","size","charCodeAt","slice","codeAt","_typeof","obj","Symbol","iterator","constructor","prototype","regexpFlags","stickyHelpers","nativeExec","nativeReplace","replace","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","UNSUPPORTED_Y","BROKEN_CARET","NPCG_INCLUDED","PATCH","str","reCopy","match","i","re","sticky","flags","source","charsAdded","strCopy","indexOf","multiline","input","arguments","fails","RE","s","f","factory","Orienter","fixed","Math","round","config","_config","onOrient","onChange","_orient","bind","_change","lon","lastLon","deltaLon","lat","lastLat","deltaLat","direction","window","orientation","fix","navigator","userAgent","os","Object","assign","on","addEventListener","off","removeEventListener","changeDirectionTo","event","alpha","gamma","beta","a","b","g","dir","$","target","proto","forced","that","ignoreCase","dotAll","r","e","t","o","c","require","u","Error","code","p","1","_dereq_","Body","Vertices","Vector","Sleeping","Common","Bounds","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","create","options","defaults","id","nextId","label","parts","plugin","angle","vertices","fromPath","x","y","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","velocity","angularVelocity","isSensor","isStatic","isSleeping","motion","sleepThreshold","density","restitution","friction","frictionStatic","frictionAir","collisionFilter","category","mask","group","slop","timeScale","render","visible","opacity","sprite","xScale","yScale","xOffset","yOffset","lineWidth","body","extend","_initProperties","nextGroup","isNonColliding","nextCategory","bounds","positionPrev","clone","anglePrev","parent","rotate","axes","update","area","mass","inertia","defaultFillStyle","choose","defaultStrokeStyle","fillStyle","strokeStyle","min","max","settings","property","hasOwnProperty","setStatic","setMass","setDensity","setInertia","setVertices","setPosition","setAngle","setVelocity","setAngularVelocity","setParts","part","_original","inverseMass","inverseInertia","Infinity","moment","fromVertices","centre","translate","autoHull","push","concat","clockwiseSort","hull","hullCentre","total","_totalProperties","delta","sub","rotateAbout","magnitude","abs","translation","add","rotation","cos","sin","dx","dy","scale","scaleX","scaleY","totalArea","totalInertia","circleRadius","deltaTime","correction","deltaTimeSquared","pow","velocityPrevX","velocityPrevY","applyForce","offset","properties","mult","div","2","Composite","Events","isModified","bodies","constraints","composites","setModified","composite","updateParents","updateChildren","childComposite","object","objects","trigger","warn","addBody","addConstraint","addComposite","constraint","remove","deep","removeBody","removeConstraint","removeComposite","compositeA","compositeB","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","filter","allBodies","allConstraints","allComposites","get","toString","move","rebase","recursive","3","World","gravity","4","Contact","vertex","normalImpulse","tangentImpulse","5","Detector","SAT","Pair","collisions","broadphasePairs","engine","pairsTable","pairs","table","bodyA","bodyB","canCollide","overlaps","j","partA","k","partB","previousCollision","pairId","pair","isActive","collision","collides","collided","filterA","filterB","6","Grid","controller","detector","buckets","pairsList","bucketWidth","bucketHeight","grid","forceUpdate","col","row","bucket","bucketId","world","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","floor","column","pairKeys","keys","7","timestamp","parentA","parentB","contacts","activeContacts","separation","timeCreated","timeUpdated","supports","support","contactId","contact","depth","setActive","8","Pairs","_pairMaxIdleLife","list","collisionStart","collisionActive","collisionEnd","activePairIds","removeOld","pairIndex","indexesToRemove","9","Query","Bodies","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","rectangle","outside","contains","10","Resolver","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","normal","bodyBtoA","contactShare","tempA","_temp","tempB","tempC","tempD","penetration","dot","postSolvePosition","preSolveVelocity","tangent","contactVertex","impulse","cross","solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","perp","velocityPointB","relativeVelocity","normalVelocity","tangentVelocity","tangentSpeed","tangentVelocityDirection","sign","normalForce","clamp","maxFriction","oAcN","oBcN","share","contactNormalImpulse","contactTangentImpulse","11","overlapAB","overlapBA","minOverlap","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","reused","overlap","axis","verticesB","_findSupports","verticesA","neg","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","projection","distance","vertexA","vertexB","nearestDistance","vertexToBody","bodyAPosition","prevIndex","nextIndex","12","Constraint","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","difference","massTotal","inertiaTotal","resistanceTotal","zero","postSolveAll","13","MouseConstraint","Mouse","mouse","canvas","element","mouseConstraint","_triggerEvents","button","mouseEvents","sourceEvents","mousemove","mousedown","mouseup","clearSourceEvents","14","_nextId","_seed","_nowStartTime","Date","argsStart","deepClone","prop","key","values","path","begin","end","split","val","shuffle","array","random","temp","choices","isElement","HTMLElement","nodeType","nodeName","isArray","isFunction","isPlainObject","isString","now","performance","webkitNow","_seededRandom","colorToNumber","colorString","parseInt","logLevel","log","console","apply","Array","info","haystack","needle","map","func","mapped","topologicalSort","graph","visited","node","_topologicalSort","neighbors","neighbor","chain","funcs","_chained","lastResult","args","l","chainPathBefore","base","chainPathAfter","_requireGlobal","globalName","moduleName","self","15","Engine","Render","positionIterations","velocityIterations","constraintIterations","enableSleeping","events","timing","broadphase","renderDefaults","metrics","extended","_bodiesApplyGravity","_bodiesUpdate","afterCollisions","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","16","eventNames","callback","name","names","join","callbacks","newCallbacks","eventClone","17","Matter","Plugin","version","uses","used","use","before","after","18","19","document","absolute","mousedownPosition","mouseupPosition","wheelDelta","pixelRatio","getAttribute","mousewheel","_getRelativeMousePosition","touches","changedTouches","preventDefault","detail","setElement","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","documentElement","parentNode","scrollX","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","pageX","left","pageY","top","clientWidth","width","clientHeight","height","20","_registry","register","isPlugin","registered","pluginVersion","versionParse","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","isFor","parsed","for","versionSatisfies","plugins","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","pattern","test","identifiers","isRange","isNaN","substr","operator","prerelease","rangeParsed","rangeParts","versionParsed","versionParts","21","Runner","_requestAnimationFrame","_cancelAnimationFrame","_frameTimeout","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","setTimeout","clearTimeout","fps","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","frameRequestId","isFixed","enabled","runner","deltaMin","deltaMax","run","time","tick","stop","start","22","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","sleepingBody","movingBody","wasSleeping","23","decomp","chamfer","radius","quality","qualityMin","qualityMax","trapezoid","slope","verticesPath","roof","x1","x2","x3","circle","maxSides","sides","ceil","polygon","theta","PI","xx","yy","toFixed","vertexSets","flagInternal","removeCollinear","minimumArea","isConvex","v","z","concave","makeCCW","removeCollinearPoints","decomposed","quickDecomp","chunk","chunkVertices","coincident_max_dist","pav","pbv","da","magnitudeSquared","db","isInternal","24","Composites","stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","bodyBWidth","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","car","wheelSize","wheelBase","wheelAOffset","wheelBOffset","wheelYOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","25","normalise","gradient","26","boundsA","boundsB","vector","shift","deltaX","deltaY","27","Svg","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","segmentIndex","lx","ly","points","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","28","sqrt","output","vectorA","vectorB","cross3","vectorC","scalar","negate","atan2","29","pathPattern","parseFloat","mean","average","signed","numerator","denominator","vertice","nextVertice","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","radiusVector","midNormal","scaledVertex","precision","acos","sort","flag","upper","lower","pop","30","RenderPixi","31","background","wireframeBackground","hasBounds","wireframes","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","setPixelRatio","appendChild","loop","_getPixelRatio","setAttribute","style","lookAt","padding","center","viewHeight","viewWidth","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","endViewTransform","setTransform","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","debug","space","debugTimestamp","text","debugString","font","fillText","beginPath","arc","closePath","moveTo","coils","lineTo","stroke","fill","bodyShadows","distanceX","distanceY","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","globalAlpha","texture","_getTexture","drawImage","rect","normalPosX","normalPosY","bucketKeys","inspector","selected","item","data","setLineDash","selectStart","selectBounds","createElement","oncontextmenu","onselectstart","devicePixelRatio","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","imagePath","image","Image","src","cssBackground","backgroundSize","32","renderer","container","spriteContainer","pixiOptions","transparent","view","antialias","backgroundColor","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","children","removeChild","bgSprite","addChildAt","setBackground","isColor","color","Sprite","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","initialAngle","texturePath","anchor","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage","$indexOf","arrayMethodIsStrict","arrayMethodUsesToLength","nativeIndexOf","NEGATIVE_ZERO","STRICT_METHOD","USES_TO_LENGTH","ACCESSORS","searchElement","defineWellKnownSymbol","redefine","wellKnownSymbol","createNonEnumerableProperty","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","groups","REPLACE_KEEPS_$0","REPLACE","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","KEY","sham","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","methods","nativeMethod","arg2","forceStringMethod","stringMethod","regexMethod","arg","DOMIterables","ArrayIteratorMethods","ITERATOR","TO_STRING_TAG","ArrayValues","COLLECTION_NAME","Collection","CollectionPrototype","error","METHOD_NAME","DESCRIPTORS","has","isObject","defineProperty","copyConstructorProperties","NativeSymbol","description","EmptyStringDescriptionStore","SymbolWrapper","symbolPrototype","symbolToString","native","configurable","symbol","valueOf","desc"],"mappings":"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","file":"js/chunk-cf016078.b1c90fa7.js","sourcesContent":["var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', 1, function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = regexp == undefined ? undefined : regexp[MATCH];\n      return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative(nativeMatch, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","/* eslint-disable space-before-function-paren */\n/* eslint-disable semi */\n/* eslint-disable comma-dangle */\n/* eslint-disable  curly */\n\n/*!\n * GIT: https://github.com/shrekshrek/orienter\n **/\n/**\n * @description: 重力感应库 npm上没有找到对应的包\n * @param {type}\n * @return {type}\n */\n(function(global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined'\n    ? (module.exports = factory())\n    : (global.Orienter = factory());\n})(this, function() {\n  'use strict';\n\n  function fixed(n) {\n    return Math.round(n * 10) / 10;\n  }\n\n  var Orienter = function(config) {\n    var _config = config || {};\n\n    this.onOrient = _config.onOrient || null;\n    this.onChange = _config.onChange || null;\n\n    this._orient = this._orient.bind(this);\n    this._change = this._change.bind(this);\n\n    this.lon = this.lastLon = this.deltaLon = null;\n    this.lat = this.lastLat = this.deltaLat = null;\n    this.direction = window.orientation || 0;\n\n    switch (this.direction) {\n      case 0:\n        this.fix = 0;\n        break;\n      case 90:\n        this.fix = -270;\n        break;\n      case -90:\n        this.fix = -90;\n        break;\n    }\n\n    if (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/)) {\n      this.os = 'ios';\n    } else {\n      this.os =\n        navigator.userAgent.indexOf('Android') > -1 ||\n        navigator.userAgent.indexOf('Linux')\n          ? 'android'\n          : '';\n    }\n  };\n\n  Object.assign(Orienter.prototype, {\n    on: function() {\n      this.lastLon = this.lastLat = null;\n      window.addEventListener('deviceorientation', this._orient, false);\n      window.addEventListener('orientationchange', this._change, false);\n    },\n\n    off: function() {\n      window.removeEventListener('deviceorientation', this._orient, false);\n      window.removeEventListener('orientationchange', this._change, false);\n    },\n\n    _change: function() {\n      this.direction = window.orientation;\n      if (this.onChange) this.onChange(this.direction);\n    },\n\n    changeDirectionTo: function(n) {\n      this.direction = n;\n    },\n\n    _orient: function(event) {\n      switch (this.os) {\n        case 'ios':\n          switch (this.direction) {\n            case 0:\n              this.lon = event.alpha + event.gamma;\n              if (event.beta > 0) this.lat = event.beta - 90;\n              break;\n            case 90:\n              if (event.gamma < 0) {\n                this.lon = event.alpha - 90;\n              } else {\n                this.lon = event.alpha - 270;\n              }\n              if (event.gamma > 0) {\n                this.lat = 90 - event.gamma;\n              } else {\n                this.lat = -90 - event.gamma;\n              }\n              break;\n            case -90:\n              if (event.gamma < 0) {\n                this.lon = event.alpha - 90;\n              } else {\n                this.lon = event.alpha - 270;\n              }\n              if (event.gamma < 0) {\n                this.lat = 90 + event.gamma;\n              } else {\n                this.lat = -90 + event.gamma;\n              }\n              break;\n          }\n          break;\n        case 'android':\n          switch (this.direction) {\n            case 0:\n              this.lon = event.alpha + event.gamma + 30;\n              if (event.gamma > 90) {\n                this.lat = 90 - event.beta;\n              } else {\n                this.lat = event.beta - 90;\n              }\n              break;\n            case 90:\n              this.lon = event.alpha - 230;\n              if (event.gamma > 0) {\n                this.lat = 270 - event.gamma;\n              } else {\n                this.lat = -90 - event.gamma;\n              }\n              break;\n            case -90:\n              this.lon = event.alpha - 180;\n              this.lat = -90 + event.gamma;\n              break;\n          }\n          break;\n      }\n\n      this.lon += this.fix;\n      this.lon %= 360;\n      if (this.lon < 0) this.lon += 360;\n\n      this.lon = fixed(this.lon);\n      this.lat = fixed(this.lat);\n\n      if (this.lastLon == null) this.lastLon = this.lon;\n      this.deltaLon = this.lon - this.lastLon;\n      if (this.deltaLon > 180) this.deltaLon -= 360;\n      if (this.deltaLon < -180) this.deltaLon += 360;\n      this.lastLon = this.lon;\n\n      if (this.lastLat == null) this.lastLat = this.lat;\n      this.deltaLat = this.lat - this.lastLat;\n      if (this.deltaLat > 180) this.deltaLat -= 360;\n      if (this.deltaLat < -180) this.deltaLat += 360;\n      this.lastLat = this.lat;\n\n      if (this.onOrient)\n        this.onOrient({\n          a: fixed(event.alpha),\n          b: fixed(event.beta),\n          g: fixed(event.gamma),\n          lon: this.lon,\n          lat: this.lat,\n          deltaLon: this.deltaLon,\n          deltaLat: this.deltaLat,\n          dir: this.direction,\n        });\n    },\n  });\n\n  return Orienter;\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","/**\n* matter-js 0.14.2 by @liabru 2018-06-11\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Used to require external libraries outside of the bundle.\n     * It first looks for the `globalName` on the environment's global namespace.\n     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n     * @private\n     * @method _requireGlobal\n     * @param {string} globalName The global module name\n     * @param {string} moduleName The fallback CommonJS module name\n     * @return {} The loaded module\n     */\n    Common._requireGlobal = function(globalName, moduleName) {\n        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\n        return obj || _dereq_(moduleName);\n    };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.14.2';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp;\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        if (!decomp) {\n            decomp = Common._requireGlobal('decomp', 'poly-decomp');\n        }\n\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../core/Common\":14,\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $indexOf = require('../internals/array-includes').indexOf;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar nativeIndexOf = [].indexOf;\n\nvar NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;\nvar STRICT_METHOD = arrayMethodIsStrict('indexOf');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.indexOf` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? nativeIndexOf.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n};\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","// `Symbol.prototype.description` getter\n// https://tc39.github.io/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar has = require('../internals/has');\nvar isObject = require('../internals/is-object');\nvar defineProperty = require('../internals/object-define-property').f;\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n\n  var symbolToString = symbolPrototype.toString;\n  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (has(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n"],"sourceRoot":""}